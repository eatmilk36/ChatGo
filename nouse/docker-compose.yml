services:
  mysql:
    image: mysql:5.7
    container_name: mysql_two
    environment:
      MYSQL_ROOT_PASSWORD: jeter
      MYSQL_DATABASE: chat
      MYSQL_USER: jeter
      MYSQL_PASSWORD: 12345678
    ports:
      - "3306:3306"
    networks:
      - app_network

  redis:
    image: redis:6
    container_name: redis_two
    command: >
      sh -c "redis-server --requirepass jeter --save '' --appendonly no &
             while ! redis-cli -h 127.0.0.1 -p 6379 -a jeter ping; do
             echo 'Waiting for Redis to start...';
             sleep 1;
             done;
             redis-cli -h 127.0.0.1 -p 6379 -a jeter CONFIG SET notify-keyspace-events Ex &&
             tail -f /dev/null"
    ports:
      - "6379:6379"
    networks:
      - app_network

  app:
    container_name: chat
    build:
      context: ./Chat_Goland
    working_dir: /app
    command: [ "./myapp" ]
    volumes:
      - "C:/Users/jeter_hsu/Desktop/playstart/project/logs:/var/log/myapp"  # Windows 路徑映射
    depends_on:
      mysql:
        condition: service_started
      redis:
        condition: service_started
      logstash:
        condition: service_healthy  # 確保 logstash 啟動並健康後才啟動 app
    ports:
      - "8080:8080"
      - "33925:33925"  # WebSocket 端口
    networks:
      - app_network

  frontend:
    container_name: frontend
    build:
      context: ./chat_frontend
      dockerfile: Dockerfile
    working_dir: /app
    ports:
      - "80:80"
    networks:
      - app_network

  cron:
    container_name: chat_cron
    build:
      context: ./Chat_Cron
    working_dir: /app
    command: [ "./myapp-cron" ] # 根據你的排程應用名稱修改
    depends_on:
      mysql:
        condition: service_started
      redis:
        condition: service_started
      logstash:
        condition: service_healthy  # 確保 logstash 啟動並健康後才啟動 cron
    networks:
      - app_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false  # 禁用安全
    #    volumes:
    #      - C:/Users/jeter_hsu/certs:/usr/share/elasticsearch/my-certs
    ports:
      - "9200:9200"
    networks:
      - app_network

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.0
    container_name: logstash
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5044:5044"
    networks:
      - app_network
    depends_on:
      - elasticsearch
    healthcheck:  # 為 logstash 添加 healthcheck
      test: ["CMD-SHELL", "curl -s http://localhost:9600/_node/pipelines | grep -q logstash"]
      interval: 10s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200  # 使用 HTTP 而非 HTTPS
      - xpack.security.enabled=false  # 禁用安全
      - ELASTICSEARCH_USERNAME=jeter
      - ELASTICSEARCH_PASSWORD=sara
    ports:
      - "5601:5601"
    networks:
      - app_network
#    depends_on:
#      elasticsearch:
#        condition: service_healthy

networks:
  app_network:
    driver: bridge
    enable_ipv6: false

volumes:
  certs_volume:
    driver: local
